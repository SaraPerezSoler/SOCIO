/**
 * generated by Xtext 2.19.0
 */
package org.xtext.botGenerator.formatting2;

import com.google.inject.Inject;
import generator.Action;
import generator.Bot;
import generator.Entity;
import generator.Intent;
import generator.IntentLanguageInputs;
import generator.Parameter;
import generator.UserInteraction;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.xtext.botGenerator.services.BotGrammarAccess;

@SuppressWarnings("all")
public class BotFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private BotGrammarAccess _botGrammarAccess;
  
  protected void _format(final Bot bot, @Extension final IFormattableDocument document) {
    EList<Intent> _intents = bot.getIntents();
    for (final Intent intent : _intents) {
      document.<Intent>format(intent);
    }
    EList<Entity> _entities = bot.getEntities();
    for (final Entity entity : _entities) {
      document.<Entity>format(entity);
    }
    EList<Action> _actions = bot.getActions();
    for (final Action action : _actions) {
      document.<Action>format(action);
    }
    EList<UserInteraction> _flows = bot.getFlows();
    for (final UserInteraction transition : _flows) {
      document.<UserInteraction>format(transition);
    }
  }
  
  protected void _format(final Intent intent, @Extension final IFormattableDocument document) {
    EList<IntentLanguageInputs> _inputs = intent.getInputs();
    for (final IntentLanguageInputs trainingPhrase : _inputs) {
      document.<IntentLanguageInputs>format(trainingPhrase);
    }
    EList<Parameter> _parameters = intent.getParameters();
    for (final Parameter parameter : _parameters) {
      document.<Parameter>format(parameter);
    }
  }
  
  public void format(final Object bot, final IFormattableDocument document) {
    if (bot instanceof XtextResource) {
      _format((XtextResource)bot, document);
      return;
    } else if (bot instanceof Bot) {
      _format((Bot)bot, document);
      return;
    } else if (bot instanceof Intent) {
      _format((Intent)bot, document);
      return;
    } else if (bot instanceof EObject) {
      _format((EObject)bot, document);
      return;
    } else if (bot == null) {
      _format((Void)null, document);
      return;
    } else if (bot != null) {
      _format(bot, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(bot, document).toString());
    }
  }
}
