/*
 * generated by Xtext 2.19.0
 */
package org.xtext.botGenerator.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class BotGrammarAccess extends AbstractGrammarElementFinder {
	
	public class BotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.Bot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChatbotKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLanguageKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLanguageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLanguageLanguageEnumRuleCall_3_0 = (RuleCall)cLanguageAssignment_3.eContents().get(0);
		private final Keyword cIntentsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cIntentsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cIntentsIntentParserRuleCall_6_0 = (RuleCall)cIntentsAssignment_6.eContents().get(0);
		private final Assignment cIntentsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cIntentsIntentParserRuleCall_7_0 = (RuleCall)cIntentsAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cEntitiesKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cColonKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cEntitiesAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cEntitiesEntityParserRuleCall_8_2_0 = (RuleCall)cEntitiesAssignment_8_2.eContents().get(0);
		private final Assignment cEntitiesAssignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
		private final RuleCall cEntitiesEntityParserRuleCall_8_3_0 = (RuleCall)cEntitiesAssignment_8_3.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cActionsKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cColonKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cActionsAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cActionsActionParserRuleCall_9_2_0 = (RuleCall)cActionsAssignment_9_2.eContents().get(0);
		private final Assignment cActionsAssignment_9_3 = (Assignment)cGroup_9.eContents().get(3);
		private final RuleCall cActionsActionParserRuleCall_9_3_0 = (RuleCall)cActionsAssignment_9_3.eContents().get(0);
		private final Keyword cFlowsKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cColonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cHyphenMinusKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cFlowsAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cFlowsTransitionParserRuleCall_12_1_0 = (RuleCall)cFlowsAssignment_12_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_12_2 = (Keyword)cGroup_12.eContents().get(2);
		
		//Bot:
		//	'Chatbot' name=EString 'language:' language=Language
		//	'intents' ':' intents+=Intent intents+=Intent* ('entities' ':' entities+=Entity entities+=Entity*)? ('actions' ':'
		//	actions+=Action actions+=Action*)?
		//	'flows' ':' ('-' flows+=Transition ';')+;
		@Override public ParserRule getRule() { return rule; }
		
		//'Chatbot' name=EString 'language:' language=Language 'intents' ':' intents+=Intent intents+=Intent* ('entities' ':'
		//entities+=Entity entities+=Entity*)? ('actions' ':' actions+=Action actions+=Action*)? 'flows' ':' ('-'
		//flows+=Transition ';')+
		public Group getGroup() { return cGroup; }
		
		//'Chatbot'
		public Keyword getChatbotKeyword_0() { return cChatbotKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'language:'
		public Keyword getLanguageKeyword_2() { return cLanguageKeyword_2; }
		
		//language=Language
		public Assignment getLanguageAssignment_3() { return cLanguageAssignment_3; }
		
		//Language
		public RuleCall getLanguageLanguageEnumRuleCall_3_0() { return cLanguageLanguageEnumRuleCall_3_0; }
		
		//'intents'
		public Keyword getIntentsKeyword_4() { return cIntentsKeyword_4; }
		
		//':'
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }
		
		//intents+=Intent
		public Assignment getIntentsAssignment_6() { return cIntentsAssignment_6; }
		
		//Intent
		public RuleCall getIntentsIntentParserRuleCall_6_0() { return cIntentsIntentParserRuleCall_6_0; }
		
		//intents+=Intent*
		public Assignment getIntentsAssignment_7() { return cIntentsAssignment_7; }
		
		//Intent
		public RuleCall getIntentsIntentParserRuleCall_7_0() { return cIntentsIntentParserRuleCall_7_0; }
		
		//('entities' ':' entities+=Entity entities+=Entity*)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'entities'
		public Keyword getEntitiesKeyword_8_0() { return cEntitiesKeyword_8_0; }
		
		//':'
		public Keyword getColonKeyword_8_1() { return cColonKeyword_8_1; }
		
		//entities+=Entity
		public Assignment getEntitiesAssignment_8_2() { return cEntitiesAssignment_8_2; }
		
		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_8_2_0() { return cEntitiesEntityParserRuleCall_8_2_0; }
		
		//entities+=Entity*
		public Assignment getEntitiesAssignment_8_3() { return cEntitiesAssignment_8_3; }
		
		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_8_3_0() { return cEntitiesEntityParserRuleCall_8_3_0; }
		
		//('actions' ':' actions+=Action actions+=Action*)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'actions'
		public Keyword getActionsKeyword_9_0() { return cActionsKeyword_9_0; }
		
		//':'
		public Keyword getColonKeyword_9_1() { return cColonKeyword_9_1; }
		
		//actions+=Action
		public Assignment getActionsAssignment_9_2() { return cActionsAssignment_9_2; }
		
		//Action
		public RuleCall getActionsActionParserRuleCall_9_2_0() { return cActionsActionParserRuleCall_9_2_0; }
		
		//actions+=Action*
		public Assignment getActionsAssignment_9_3() { return cActionsAssignment_9_3; }
		
		//Action
		public RuleCall getActionsActionParserRuleCall_9_3_0() { return cActionsActionParserRuleCall_9_3_0; }
		
		//'flows'
		public Keyword getFlowsKeyword_10() { return cFlowsKeyword_10; }
		
		//':'
		public Keyword getColonKeyword_11() { return cColonKeyword_11; }
		
		//('-' flows+=Transition ';')+
		public Group getGroup_12() { return cGroup_12; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_12_0() { return cHyphenMinusKeyword_12_0; }
		
		//flows+=Transition
		public Assignment getFlowsAssignment_12_1() { return cFlowsAssignment_12_1; }
		
		//Transition
		public RuleCall getFlowsTransitionParserRuleCall_12_1_0() { return cFlowsTransitionParserRuleCall_12_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_12_2() { return cSemicolonKeyword_12_2; }
	}
	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.Entity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSimpleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCompositeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Entity:
		//	Simple | Composite;
		@Override public ParserRule getRule() { return rule; }
		
		//Simple | Composite
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Simple
		public RuleCall getSimpleParserRuleCall_0() { return cSimpleParserRuleCall_0; }
		
		//Composite
		public RuleCall getCompositeParserRuleCall_1() { return cCompositeParserRuleCall_1; }
	}
	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.Action");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cTextParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cHTTPRequestParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cImageParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cHTTPResponseParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Action:
		//	Text | HTTPRequest | Image | HTTPResponse;
		@Override public ParserRule getRule() { return rule; }
		
		//Text | HTTPRequest | Image | HTTPResponse
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Text
		public RuleCall getTextParserRuleCall_0() { return cTextParserRuleCall_0; }
		
		//HTTPRequest
		public RuleCall getHTTPRequestParserRuleCall_1() { return cHTTPRequestParserRuleCall_1; }
		
		//Image
		public RuleCall getImageParserRuleCall_2() { return cImageParserRuleCall_2; }
		
		//HTTPResponse
		public RuleCall getHTTPResponseParserRuleCall_3() { return cHTTPResponseParserRuleCall_3; }
	}
	public class TokenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.Token");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLiteralParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEntityTokenParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cParameterTokenParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cParameterRefenceTokenParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Token:
		//	Literal | EntityToken | ParameterToken | ParameterRefenceToken;
		@Override public ParserRule getRule() { return rule; }
		
		//Literal | EntityToken | ParameterToken | ParameterRefenceToken
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Literal
		public RuleCall getLiteralParserRuleCall_0() { return cLiteralParserRuleCall_0; }
		
		//EntityToken
		public RuleCall getEntityTokenParserRuleCall_1() { return cEntityTokenParserRuleCall_1; }
		
		//ParameterToken
		public RuleCall getParameterTokenParserRuleCall_2() { return cParameterTokenParserRuleCall_2; }
		
		//ParameterRefenceToken
		public RuleCall getParameterRefenceTokenParserRuleCall_3() { return cParameterRefenceTokenParserRuleCall_3; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class IntentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.Intent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cFallbackIntentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cFallbackIntentFallbackKeyword_1_0 = (Keyword)cFallbackIntentAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cInputsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cInputsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInputsTrainingPhraseParserRuleCall_4_0 = (RuleCall)cInputsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInputsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInputsTrainingPhraseParserRuleCall_5_1_0 = (RuleCall)cInputsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cParametersKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cParametersAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cParametersParameterParserRuleCall_6_1_0 = (RuleCall)cParametersAssignment_6_1.eContents().get(0);
		private final Assignment cParametersAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cParametersParameterParserRuleCall_6_2_0 = (RuleCall)cParametersAssignment_6_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Intent:
		//	name=EString fallbackIntent?='Fallback'?
		//	'{'
		//	'inputs:' inputs+=TrainingPhrase ("," inputs+=TrainingPhrase)* ('parameters:' parameters+=Parameter
		//	parameters+=Parameter*)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString fallbackIntent?='Fallback'? '{' 'inputs:' inputs+=TrainingPhrase ("," inputs+=TrainingPhrase)*
		//('parameters:' parameters+=Parameter parameters+=Parameter*)? '}'
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//fallbackIntent?='Fallback'?
		public Assignment getFallbackIntentAssignment_1() { return cFallbackIntentAssignment_1; }
		
		//'Fallback'
		public Keyword getFallbackIntentFallbackKeyword_1_0() { return cFallbackIntentFallbackKeyword_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'inputs:'
		public Keyword getInputsKeyword_3() { return cInputsKeyword_3; }
		
		//inputs+=TrainingPhrase
		public Assignment getInputsAssignment_4() { return cInputsAssignment_4; }
		
		//TrainingPhrase
		public RuleCall getInputsTrainingPhraseParserRuleCall_4_0() { return cInputsTrainingPhraseParserRuleCall_4_0; }
		
		//("," inputs+=TrainingPhrase)*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//inputs+=TrainingPhrase
		public Assignment getInputsAssignment_5_1() { return cInputsAssignment_5_1; }
		
		//TrainingPhrase
		public RuleCall getInputsTrainingPhraseParserRuleCall_5_1_0() { return cInputsTrainingPhraseParserRuleCall_5_1_0; }
		
		//('parameters:' parameters+=Parameter parameters+=Parameter*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'parameters:'
		public Keyword getParametersKeyword_6_0() { return cParametersKeyword_6_0; }
		
		//parameters+=Parameter
		public Assignment getParametersAssignment_6_1() { return cParametersAssignment_6_1; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_1_0() { return cParametersParameterParserRuleCall_6_1_0; }
		
		//parameters+=Parameter*
		public Assignment getParametersAssignment_6_2() { return cParametersAssignment_6_2; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_6_2_0() { return cParametersParameterParserRuleCall_6_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class TransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.Transition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUserKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIntentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cIntentIntentCrossReference_1_0 = (CrossReference)cIntentAssignment_1.eContents().get(0);
		private final RuleCall cIntentIntentEStringParserRuleCall_1_0_1 = (RuleCall)cIntentIntentCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cEqualsSignGreaterThanSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTargetAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final Alternatives cTargetAlternatives_2_1_0 = (Alternatives)cTargetAssignment_2_1.eContents().get(0);
		private final RuleCall cTargetStateParserRuleCall_2_1_0_0 = (RuleCall)cTargetAlternatives_2_1_0.eContents().get(0);
		private final RuleCall cTargetState2ParserRuleCall_2_1_0_1 = (RuleCall)cTargetAlternatives_2_1_0.eContents().get(1);
		
		//Transition UserInteraction:
		//	'user' intent=[Intent|EString] ('=>' target=(State | State2))?;
		@Override public ParserRule getRule() { return rule; }
		
		//'user' intent=[Intent|EString] ('=>' target=(State | State2))?
		public Group getGroup() { return cGroup; }
		
		//'user'
		public Keyword getUserKeyword_0() { return cUserKeyword_0; }
		
		//intent=[Intent|EString]
		public Assignment getIntentAssignment_1() { return cIntentAssignment_1; }
		
		//[Intent|EString]
		public CrossReference getIntentIntentCrossReference_1_0() { return cIntentIntentCrossReference_1_0; }
		
		//EString
		public RuleCall getIntentIntentEStringParserRuleCall_1_0_1() { return cIntentIntentEStringParserRuleCall_1_0_1; }
		
		//('=>' target=(State | State2))?
		public Group getGroup_2() { return cGroup_2; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_2_0() { return cEqualsSignGreaterThanSignKeyword_2_0; }
		
		//target=(State | State2)
		public Assignment getTargetAssignment_2_1() { return cTargetAssignment_2_1; }
		
		//(State | State2)
		public Alternatives getTargetAlternatives_2_1_0() { return cTargetAlternatives_2_1_0; }
		
		//State
		public RuleCall getTargetStateParserRuleCall_2_1_0_0() { return cTargetStateParserRuleCall_2_1_0_0; }
		
		//State2
		public RuleCall getTargetState2ParserRuleCall_2_1_0_1() { return cTargetState2ParserRuleCall_2_1_0_1; }
	}
	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.State");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChatbotKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cActionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cActionsActionCrossReference_2_0 = (CrossReference)cActionsAssignment_2.eContents().get(0);
		private final RuleCall cActionsActionEStringParserRuleCall_2_0_1 = (RuleCall)cActionsActionCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cActionsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cActionsActionCrossReference_3_1_0 = (CrossReference)cActionsAssignment_3_1.eContents().get(0);
		private final RuleCall cActionsActionEStringParserRuleCall_3_1_0_1 = (RuleCall)cActionsActionCrossReference_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEqualsSignGreaterThanSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cOutcomingAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cOutcomingTransitionParserRuleCall_5_1_0 = (RuleCall)cOutcomingAssignment_5_1.eContents().get(0);
		
		//State BotInteraction:
		//	'chatbot' '(' actions+=[Action|EString] (',' actions+=[Action|EString])* ')' ('=>' outcoming+=Transition)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'chatbot' '(' actions+=[Action|EString] (',' actions+=[Action|EString])* ')' ('=>' outcoming+=Transition)?
		public Group getGroup() { return cGroup; }
		
		//'chatbot'
		public Keyword getChatbotKeyword_0() { return cChatbotKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//actions+=[Action|EString]
		public Assignment getActionsAssignment_2() { return cActionsAssignment_2; }
		
		//[Action|EString]
		public CrossReference getActionsActionCrossReference_2_0() { return cActionsActionCrossReference_2_0; }
		
		//EString
		public RuleCall getActionsActionEStringParserRuleCall_2_0_1() { return cActionsActionEStringParserRuleCall_2_0_1; }
		
		//(',' actions+=[Action|EString])*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//actions+=[Action|EString]
		public Assignment getActionsAssignment_3_1() { return cActionsAssignment_3_1; }
		
		//[Action|EString]
		public CrossReference getActionsActionCrossReference_3_1_0() { return cActionsActionCrossReference_3_1_0; }
		
		//EString
		public RuleCall getActionsActionEStringParserRuleCall_3_1_0_1() { return cActionsActionEStringParserRuleCall_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
		
		//('=>' outcoming+=Transition)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_5_0() { return cEqualsSignGreaterThanSignKeyword_5_0; }
		
		//outcoming+=Transition
		public Assignment getOutcomingAssignment_5_1() { return cOutcomingAssignment_5_1; }
		
		//Transition
		public RuleCall getOutcomingTransitionParserRuleCall_5_1_0() { return cOutcomingTransitionParserRuleCall_5_1_0; }
	}
	public class State2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.State2");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChatbotKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cActionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cActionsActionCrossReference_2_0 = (CrossReference)cActionsAssignment_2.eContents().get(0);
		private final RuleCall cActionsActionEStringParserRuleCall_2_0_1 = (RuleCall)cActionsActionCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cActionsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cActionsActionCrossReference_3_1_0 = (CrossReference)cActionsAssignment_3_1.eContents().get(0);
		private final RuleCall cActionsActionEStringParserRuleCall_3_1_0_1 = (RuleCall)cActionsActionCrossReference_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cEqualsSignGreaterThanSignKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cOutcomingAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cOutcomingTransitionParserRuleCall_6_1_0 = (RuleCall)cOutcomingAssignment_6_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//State2 BotInteraction:
		//	'chatbot' '(' actions+=[Action|EString] (',' actions+=[Action|EString])* ')' '{' ('=>' outcoming+=Transition ';')+
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'chatbot' '(' actions+=[Action|EString] (',' actions+=[Action|EString])* ')' '{' ('=>' outcoming+=Transition ';')+ '}'
		public Group getGroup() { return cGroup; }
		
		//'chatbot'
		public Keyword getChatbotKeyword_0() { return cChatbotKeyword_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_1() { return cLeftParenthesisKeyword_1; }
		
		//actions+=[Action|EString]
		public Assignment getActionsAssignment_2() { return cActionsAssignment_2; }
		
		//[Action|EString]
		public CrossReference getActionsActionCrossReference_2_0() { return cActionsActionCrossReference_2_0; }
		
		//EString
		public RuleCall getActionsActionEStringParserRuleCall_2_0_1() { return cActionsActionEStringParserRuleCall_2_0_1; }
		
		//(',' actions+=[Action|EString])*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//actions+=[Action|EString]
		public Assignment getActionsAssignment_3_1() { return cActionsAssignment_3_1; }
		
		//[Action|EString]
		public CrossReference getActionsActionCrossReference_3_1_0() { return cActionsActionCrossReference_3_1_0; }
		
		//EString
		public RuleCall getActionsActionEStringParserRuleCall_3_1_0_1() { return cActionsActionEStringParserRuleCall_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }
		
		//('=>' outcoming+=Transition ';')+
		public Group getGroup_6() { return cGroup_6; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_6_0() { return cEqualsSignGreaterThanSignKeyword_6_0; }
		
		//outcoming+=Transition
		public Assignment getOutcomingAssignment_6_1() { return cOutcomingAssignment_6_1; }
		
		//Transition
		public RuleCall getOutcomingTransitionParserRuleCall_6_1_0() { return cOutcomingTransitionParserRuleCall_6_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6_2() { return cSemicolonKeyword_6_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class TrainingPhraseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.TrainingPhrase");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTrainingPhraseAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTokensAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cTokensAlternatives_1_0 = (Alternatives)cTokensAssignment_1.eContents().get(0);
		private final RuleCall cTokensLiteralParserRuleCall_1_0_0 = (RuleCall)cTokensAlternatives_1_0.eContents().get(0);
		private final RuleCall cTokensParameterRefenceTokenParserRuleCall_1_0_1 = (RuleCall)cTokensAlternatives_1_0.eContents().get(1);
		
		//TrainingPhrase:
		//	{TrainingPhrase} tokens+=(Literal | ParameterRefenceToken)+;
		@Override public ParserRule getRule() { return rule; }
		
		//{TrainingPhrase} tokens+=(Literal | ParameterRefenceToken)+
		public Group getGroup() { return cGroup; }
		
		//{TrainingPhrase}
		public Action getTrainingPhraseAction_0() { return cTrainingPhraseAction_0; }
		
		//tokens+=(Literal | ParameterRefenceToken)+
		public Assignment getTokensAssignment_1() { return cTokensAssignment_1; }
		
		//(Literal | ParameterRefenceToken)
		public Alternatives getTokensAlternatives_1_0() { return cTokensAlternatives_1_0; }
		
		//Literal
		public RuleCall getTokensLiteralParserRuleCall_1_0_0() { return cTokensLiteralParserRuleCall_1_0_0; }
		
		//ParameterRefenceToken
		public RuleCall getTokensParameterRefenceTokenParserRuleCall_1_0_1() { return cTokensParameterRefenceTokenParserRuleCall_1_0_1; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEntityKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cEntityAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final CrossReference cEntityEntityCrossReference_3_0_0 = (CrossReference)cEntityAssignment_3_0.eContents().get(0);
		private final RuleCall cEntityEntityEStringParserRuleCall_3_0_0_1 = (RuleCall)cEntityEntityCrossReference_3_0_0.eContents().get(1);
		private final Assignment cDefaultEntityAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cDefaultEntityDefaultEntityEnumRuleCall_3_1_0 = (RuleCall)cDefaultEntityAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cRequiredAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final Keyword cRequiredRequiredKeyword_4_1_0 = (Keyword)cRequiredAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Keyword cPromptsKeyword_4_2_1 = (Keyword)cGroup_4_2.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_4_2_2 = (Keyword)cGroup_4_2.eContents().get(2);
		private final Assignment cPromptsAssignment_4_2_3 = (Assignment)cGroup_4_2.eContents().get(3);
		private final RuleCall cPromptsEStringParserRuleCall_4_2_3_0 = (RuleCall)cPromptsAssignment_4_2_3.eContents().get(0);
		private final Group cGroup_4_2_4 = (Group)cGroup_4_2.eContents().get(4);
		private final Keyword cCommaKeyword_4_2_4_0 = (Keyword)cGroup_4_2_4.eContents().get(0);
		private final Assignment cPromptsAssignment_4_2_4_1 = (Assignment)cGroup_4_2_4.eContents().get(1);
		private final RuleCall cPromptsEStringParserRuleCall_4_2_4_1_0 = (RuleCall)cPromptsAssignment_4_2_4_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_2_5 = (Keyword)cGroup_4_2.eContents().get(5);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cIsListAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final Keyword cIsListIsListKeyword_5_1_0 = (Keyword)cIsListAssignment_5_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Parameter:
		//	name=EString ':'
		//	'entity' (entity=[Entity|EString] | defaultEntity=DefaultEntity) (',' required?='required' (',' 'prompts' '['
		//	prompts+=EString (',' prompts+=EString)* ']')?)? (',' isList?='isList')? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString ':' 'entity' (entity=[Entity|EString] | defaultEntity=DefaultEntity) (',' required?='required' (','
		//'prompts' '[' prompts+=EString (',' prompts+=EString)* ']')?)? (',' isList?='isList')? ';'
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'entity'
		public Keyword getEntityKeyword_2() { return cEntityKeyword_2; }
		
		//(entity=[Entity|EString] | defaultEntity=DefaultEntity)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//entity=[Entity|EString]
		public Assignment getEntityAssignment_3_0() { return cEntityAssignment_3_0; }
		
		//[Entity|EString]
		public CrossReference getEntityEntityCrossReference_3_0_0() { return cEntityEntityCrossReference_3_0_0; }
		
		//EString
		public RuleCall getEntityEntityEStringParserRuleCall_3_0_0_1() { return cEntityEntityEStringParserRuleCall_3_0_0_1; }
		
		//defaultEntity=DefaultEntity
		public Assignment getDefaultEntityAssignment_3_1() { return cDefaultEntityAssignment_3_1; }
		
		//DefaultEntity
		public RuleCall getDefaultEntityDefaultEntityEnumRuleCall_3_1_0() { return cDefaultEntityDefaultEntityEnumRuleCall_3_1_0; }
		
		//(',' required?='required' (',' 'prompts' '[' prompts+=EString (',' prompts+=EString)* ']')?)?
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//required?='required'
		public Assignment getRequiredAssignment_4_1() { return cRequiredAssignment_4_1; }
		
		//'required'
		public Keyword getRequiredRequiredKeyword_4_1_0() { return cRequiredRequiredKeyword_4_1_0; }
		
		//(',' 'prompts' '[' prompts+=EString (',' prompts+=EString)* ']')?
		public Group getGroup_4_2() { return cGroup_4_2; }
		
		//','
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }
		
		//'prompts'
		public Keyword getPromptsKeyword_4_2_1() { return cPromptsKeyword_4_2_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_2_2() { return cLeftSquareBracketKeyword_4_2_2; }
		
		//prompts+=EString
		public Assignment getPromptsAssignment_4_2_3() { return cPromptsAssignment_4_2_3; }
		
		//EString
		public RuleCall getPromptsEStringParserRuleCall_4_2_3_0() { return cPromptsEStringParserRuleCall_4_2_3_0; }
		
		//(',' prompts+=EString)*
		public Group getGroup_4_2_4() { return cGroup_4_2_4; }
		
		//','
		public Keyword getCommaKeyword_4_2_4_0() { return cCommaKeyword_4_2_4_0; }
		
		//prompts+=EString
		public Assignment getPromptsAssignment_4_2_4_1() { return cPromptsAssignment_4_2_4_1; }
		
		//EString
		public RuleCall getPromptsEStringParserRuleCall_4_2_4_1_0() { return cPromptsEStringParserRuleCall_4_2_4_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_2_5() { return cRightSquareBracketKeyword_4_2_5; }
		
		//(',' isList?='isList')?
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//isList?='isList'
		public Assignment getIsListAssignment_5_1() { return cIsListAssignment_5_1; }
		
		//'isList'
		public Keyword getIsListIsListKeyword_5_1_0() { return cIsListIsListKeyword_5_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_6() { return cSemicolonKeyword_6; }
	}
	public class LiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.Literal");
		private final Assignment cTextAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cTextEStringParserRuleCall_0 = (RuleCall)cTextAssignment.eContents().get(0);
		
		//Literal:
		//	text=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//text=EString
		public Assignment getTextAssignment() { return cTextAssignment; }
		
		//EString
		public RuleCall getTextEStringParserRuleCall_0() { return cTextEStringParserRuleCall_0; }
	}
	public class EntityTokenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.EntityToken");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEntityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cEntityEntityCrossReference_1_0 = (CrossReference)cEntityAssignment_1.eContents().get(0);
		private final RuleCall cEntityEntityEStringParserRuleCall_1_0_1 = (RuleCall)cEntityEntityCrossReference_1_0.eContents().get(1);
		
		//EntityToken:
		//	'@' entity=[Entity|EString];
		@Override public ParserRule getRule() { return rule; }
		
		//'@' entity=[Entity|EString]
		public Group getGroup() { return cGroup; }
		
		//'@'
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }
		
		//entity=[Entity|EString]
		public Assignment getEntityAssignment_1() { return cEntityAssignment_1; }
		
		//[Entity|EString]
		public CrossReference getEntityEntityCrossReference_1_0() { return cEntityEntityCrossReference_1_0; }
		
		//EString
		public RuleCall getEntityEntityEStringParserRuleCall_1_0_1() { return cEntityEntityEStringParserRuleCall_1_0_1; }
	}
	public class ParameterTokenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.ParameterToken");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cParameterAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cParameterParameterCrossReference_1_0 = (CrossReference)cParameterAssignment_1.eContents().get(0);
		private final RuleCall cParameterParameterEStringParserRuleCall_1_0_1 = (RuleCall)cParameterParameterCrossReference_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ParameterToken:
		//	'[' parameter=[Parameter|EString] ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'[' parameter=[Parameter|EString] ']'
		public Group getGroup() { return cGroup; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }
		
		//parameter=[Parameter|EString]
		public Assignment getParameterAssignment_1() { return cParameterAssignment_1; }
		
		//[Parameter|EString]
		public CrossReference getParameterParameterCrossReference_1_0() { return cParameterParameterCrossReference_1_0; }
		
		//EString
		public RuleCall getParameterParameterEStringParserRuleCall_1_0_1() { return cParameterParameterEStringParserRuleCall_1_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
	}
	public class ParameterRefenceTokenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.ParameterRefenceToken");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTextReferenceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTextReferenceEStringParserRuleCall_1_0 = (RuleCall)cTextReferenceAssignment_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cParameterAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cParameterParameterCrossReference_4_0 = (CrossReference)cParameterAssignment_4.eContents().get(0);
		private final RuleCall cParameterParameterEStringParserRuleCall_4_0_1 = (RuleCall)cParameterParameterCrossReference_4_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ParameterRefenceToken ParameterReferenceToken:
		//	'(' textReference=EString ')' '[' parameter=[Parameter|EString] ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'(' textReference=EString ')' '[' parameter=[Parameter|EString] ']'
		public Group getGroup() { return cGroup; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }
		
		//textReference=EString
		public Assignment getTextReferenceAssignment_1() { return cTextReferenceAssignment_1; }
		
		//EString
		public RuleCall getTextReferenceEStringParserRuleCall_1_0() { return cTextReferenceEStringParserRuleCall_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//parameter=[Parameter|EString]
		public Assignment getParameterAssignment_4() { return cParameterAssignment_4; }
		
		//[Parameter|EString]
		public CrossReference getParameterParameterCrossReference_4_0() { return cParameterParameterCrossReference_4_0; }
		
		//EString
		public RuleCall getParameterParameterEStringParserRuleCall_4_0_1() { return cParameterParameterEStringParserRuleCall_4_0_1; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class HTTPRequestTokenElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.HTTPRequestToken");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRequestKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeHTTPReturnTypeEnumRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFullStopKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDataKeyAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDataKeyEStringParserRuleCall_2_1_0 = (RuleCall)cDataKeyAssignment_2_1.eContents().get(0);
		
		//HTTPRequestToken HTTPRequestToke:
		//	'request.' type=HTTPReturnType ('.' dataKey=EString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'request.' type=HTTPReturnType ('.' dataKey=EString)?
		public Group getGroup() { return cGroup; }
		
		//'request.'
		public Keyword getRequestKeyword_0() { return cRequestKeyword_0; }
		
		//type=HTTPReturnType
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//HTTPReturnType
		public RuleCall getTypeHTTPReturnTypeEnumRuleCall_1_0() { return cTypeHTTPReturnTypeEnumRuleCall_1_0; }
		
		//('.' dataKey=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'.'
		public Keyword getFullStopKeyword_2_0() { return cFullStopKeyword_2_0; }
		
		//dataKey=EString
		public Assignment getDataKeyAssignment_2_1() { return cDataKeyAssignment_2_1; }
		
		//EString
		public RuleCall getDataKeyEStringParserRuleCall_2_1_0() { return cDataKeyEStringParserRuleCall_2_1_0; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class SimpleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.Simple");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSimpleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSimpleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEntityKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cInputsAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cInputsSimpleInputParserRuleCall_5_0_0 = (RuleCall)cInputsAssignment_5_0.eContents().get(0);
		private final Assignment cInputsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInputsSimpleInputParserRuleCall_5_1_0 = (RuleCall)cInputsAssignment_5_1.eContents().get(0);
		
		//Simple:
		//	{Simple}
		//	'Simple' 'entity' name=EString ':' (inputs+=SimpleInput inputs+=SimpleInput*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Simple} 'Simple' 'entity' name=EString ':' (inputs+=SimpleInput inputs+=SimpleInput*)?
		public Group getGroup() { return cGroup; }
		
		//{Simple}
		public Action getSimpleAction_0() { return cSimpleAction_0; }
		
		//'Simple'
		public Keyword getSimpleKeyword_1() { return cSimpleKeyword_1; }
		
		//'entity'
		public Keyword getEntityKeyword_2() { return cEntityKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//(inputs+=SimpleInput inputs+=SimpleInput*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//inputs+=SimpleInput
		public Assignment getInputsAssignment_5_0() { return cInputsAssignment_5_0; }
		
		//SimpleInput
		public RuleCall getInputsSimpleInputParserRuleCall_5_0_0() { return cInputsSimpleInputParserRuleCall_5_0_0; }
		
		//inputs+=SimpleInput*
		public Assignment getInputsAssignment_5_1() { return cInputsAssignment_5_1; }
		
		//SimpleInput
		public RuleCall getInputsSimpleInputParserRuleCall_5_1_0() { return cInputsSimpleInputParserRuleCall_5_1_0; }
	}
	public class CompositeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.Composite");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCompositeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCompositeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cEntityKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cInputsAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cInputsCompositeInputParserRuleCall_5_0_0 = (RuleCall)cInputsAssignment_5_0.eContents().get(0);
		private final Assignment cInputsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInputsCompositeInputParserRuleCall_5_1_0 = (RuleCall)cInputsAssignment_5_1.eContents().get(0);
		
		//Composite:
		//	{Composite}
		//	'Composite' 'entity' name=EString ':' (inputs+=CompositeInput inputs+=CompositeInput*)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Composite} 'Composite' 'entity' name=EString ':' (inputs+=CompositeInput inputs+=CompositeInput*)?
		public Group getGroup() { return cGroup; }
		
		//{Composite}
		public Action getCompositeAction_0() { return cCompositeAction_0; }
		
		//'Composite'
		public Keyword getCompositeKeyword_1() { return cCompositeKeyword_1; }
		
		//'entity'
		public Keyword getEntityKeyword_2() { return cEntityKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//(inputs+=CompositeInput inputs+=CompositeInput*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//inputs+=CompositeInput
		public Assignment getInputsAssignment_5_0() { return cInputsAssignment_5_0; }
		
		//CompositeInput
		public RuleCall getInputsCompositeInputParserRuleCall_5_0_0() { return cInputsCompositeInputParserRuleCall_5_0_0; }
		
		//inputs+=CompositeInput*
		public Assignment getInputsAssignment_5_1() { return cInputsAssignment_5_1; }
		
		//CompositeInput
		public RuleCall getInputsCompositeInputParserRuleCall_5_1_0() { return cInputsCompositeInputParserRuleCall_5_1_0; }
	}
	public class SimpleInputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.SimpleInput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSimpleInputAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSynonymsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cValuesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cValuesEStringParserRuleCall_2_1_0 = (RuleCall)cValuesAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Keyword cCommaKeyword_2_2_0 = (Keyword)cGroup_2_2.eContents().get(0);
		private final Assignment cValuesAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cValuesEStringParserRuleCall_2_2_1_0 = (RuleCall)cValuesAssignment_2_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//SimpleInput:
		//	{SimpleInput} name=EString ('synonyms' values+=EString ("," values+=EString)*)? ';';
		@Override public ParserRule getRule() { return rule; }
		
		//{SimpleInput} name=EString ('synonyms' values+=EString ("," values+=EString)*)? ';'
		public Group getGroup() { return cGroup; }
		
		//{SimpleInput}
		public Action getSimpleInputAction_0() { return cSimpleInputAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//('synonyms' values+=EString ("," values+=EString)*)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'synonyms'
		public Keyword getSynonymsKeyword_2_0() { return cSynonymsKeyword_2_0; }
		
		//values+=EString
		public Assignment getValuesAssignment_2_1() { return cValuesAssignment_2_1; }
		
		//EString
		public RuleCall getValuesEStringParserRuleCall_2_1_0() { return cValuesEStringParserRuleCall_2_1_0; }
		
		//("," values+=EString)*
		public Group getGroup_2_2() { return cGroup_2_2; }
		
		//","
		public Keyword getCommaKeyword_2_2_0() { return cCommaKeyword_2_2_0; }
		
		//values+=EString
		public Assignment getValuesAssignment_2_2_1() { return cValuesAssignment_2_2_1; }
		
		//EString
		public RuleCall getValuesEStringParserRuleCall_2_2_1_0() { return cValuesEStringParserRuleCall_2_2_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}
	public class CompositeInputElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.CompositeInput");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTokensAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cTokensAlternatives_0_0 = (Alternatives)cTokensAssignment_0.eContents().get(0);
		private final RuleCall cTokensLiteralParserRuleCall_0_0_0 = (RuleCall)cTokensAlternatives_0_0.eContents().get(0);
		private final RuleCall cTokensEntityTokenParserRuleCall_0_0_1 = (RuleCall)cTokensAlternatives_0_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//CompositeInput:
		//	tokens+=(Literal | EntityToken)+ ';';
		@Override public ParserRule getRule() { return rule; }
		
		//tokens+=(Literal | EntityToken)+ ';'
		public Group getGroup() { return cGroup; }
		
		//tokens+=(Literal | EntityToken)+
		public Assignment getTokensAssignment_0() { return cTokensAssignment_0; }
		
		//(Literal | EntityToken)
		public Alternatives getTokensAlternatives_0_0() { return cTokensAlternatives_0_0; }
		
		//Literal
		public RuleCall getTokensLiteralParserRuleCall_0_0_0() { return cTokensLiteralParserRuleCall_0_0_0; }
		
		//EntityToken
		public RuleCall getTokensEntityTokenParserRuleCall_0_0_1() { return cTokensEntityTokenParserRuleCall_0_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_1() { return cSemicolonKeyword_1; }
	}
	public class TextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.Text");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cResponseKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cTextKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInputsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInputsTextInputTextParserRuleCall_5_0 = (RuleCall)cInputsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cInputsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cInputsTextInputTextParserRuleCall_6_1_0 = (RuleCall)cInputsAssignment_6_1.eContents().get(0);
		
		//Text:
		//	'text' 'response' name=EString ':'
		//	'text:'? inputs+=TextInputText (',' inputs+=TextInputText)*;
		@Override public ParserRule getRule() { return rule; }
		
		//'text' 'response' name=EString ':' 'text:'? inputs+=TextInputText (',' inputs+=TextInputText)*
		public Group getGroup() { return cGroup; }
		
		//'text'
		public Keyword getTextKeyword_0() { return cTextKeyword_0; }
		
		//'response'
		public Keyword getResponseKeyword_1() { return cResponseKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//'text:'?
		public Keyword getTextKeyword_4() { return cTextKeyword_4; }
		
		//inputs+=TextInputText
		public Assignment getInputsAssignment_5() { return cInputsAssignment_5; }
		
		//TextInputText
		public RuleCall getInputsTextInputTextParserRuleCall_5_0() { return cInputsTextInputTextParserRuleCall_5_0; }
		
		//(',' inputs+=TextInputText)*
		public Group getGroup_6() { return cGroup_6; }
		
		//','
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//inputs+=TextInputText
		public Assignment getInputsAssignment_6_1() { return cInputsAssignment_6_1; }
		
		//TextInputText
		public RuleCall getInputsTextInputTextParserRuleCall_6_1_0() { return cInputsTextInputTextParserRuleCall_6_1_0; }
	}
	public class HTTPResponseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.HTTPResponse");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHttpResponseKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cHttpRequestKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cHTTPRequestAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cHTTPRequestHTTPRequestCrossReference_4_0 = (CrossReference)cHTTPRequestAssignment_4.eContents().get(0);
		private final RuleCall cHTTPRequestHTTPRequestEStringParserRuleCall_4_0_1 = (RuleCall)cHTTPRequestHTTPRequestCrossReference_4_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cTextKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cInputsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cInputsTextInputHttpResponseParserRuleCall_7_0 = (RuleCall)cInputsAssignment_7.eContents().get(0);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//HTTPResponse:
		//	'HttpResponse' name=EString ':'
		//	'HttpRequest:' HTTPRequest=[HTTPRequest|EString] ';'
		//	'text:' inputs=TextInputHttpResponse ';';
		@Override public ParserRule getRule() { return rule; }
		
		//'HttpResponse' name=EString ':' 'HttpRequest:' HTTPRequest=[HTTPRequest|EString] ';' 'text:'
		//inputs=TextInputHttpResponse ';'
		public Group getGroup() { return cGroup; }
		
		//'HttpResponse'
		public Keyword getHttpResponseKeyword_0() { return cHttpResponseKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'HttpRequest:'
		public Keyword getHttpRequestKeyword_3() { return cHttpRequestKeyword_3; }
		
		//HTTPRequest=[HTTPRequest|EString]
		public Assignment getHTTPRequestAssignment_4() { return cHTTPRequestAssignment_4; }
		
		//[HTTPRequest|EString]
		public CrossReference getHTTPRequestHTTPRequestCrossReference_4_0() { return cHTTPRequestHTTPRequestCrossReference_4_0; }
		
		//EString
		public RuleCall getHTTPRequestHTTPRequestEStringParserRuleCall_4_0_1() { return cHTTPRequestHTTPRequestEStringParserRuleCall_4_0_1; }
		
		//';'
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
		
		//'text:'
		public Keyword getTextKeyword_6() { return cTextKeyword_6; }
		
		//inputs=TextInputHttpResponse
		public Assignment getInputsAssignment_7() { return cInputsAssignment_7; }
		
		//TextInputHttpResponse
		public RuleCall getInputsTextInputHttpResponseParserRuleCall_7_0() { return cInputsTextInputHttpResponseParserRuleCall_7_0; }
		
		//';'
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
	}
	public class HTTPRequestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.HTTPRequest");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHTTPKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cRequestKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMethodAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMethodMethodEnumRuleCall_2_0 = (RuleCall)cMethodAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cURLKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cURLAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cURLEStringParserRuleCall_7_0 = (RuleCall)cURLAssignment_7.eContents().get(0);
		private final Keyword cSemicolonKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cBasicAuthKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cColonKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cBasicAuthAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cBasicAuthKeyValueParserRuleCall_9_2_0 = (RuleCall)cBasicAuthAssignment_9_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cHeadersKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cColonKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cHeadersAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cHeadersKeyValueParserRuleCall_10_2_0 = (RuleCall)cHeadersAssignment_10_2.eContents().get(0);
		private final Group cGroup_10_3 = (Group)cGroup_10.eContents().get(3);
		private final Keyword cCommaKeyword_10_3_0 = (Keyword)cGroup_10_3.eContents().get(0);
		private final Assignment cHeadersAssignment_10_3_1 = (Assignment)cGroup_10_3.eContents().get(1);
		private final RuleCall cHeadersKeyValueParserRuleCall_10_3_1_0 = (RuleCall)cHeadersAssignment_10_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_10_4 = (Keyword)cGroup_10.eContents().get(4);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cDataKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cColonKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cDataAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cDataDataParserRuleCall_11_2_0 = (RuleCall)cDataAssignment_11_2.eContents().get(0);
		private final Group cGroup_11_3 = (Group)cGroup_11.eContents().get(3);
		private final Keyword cCommaKeyword_11_3_0 = (Keyword)cGroup_11_3.eContents().get(0);
		private final Assignment cDataAssignment_11_3_1 = (Assignment)cGroup_11_3.eContents().get(1);
		private final RuleCall cDataDataParserRuleCall_11_3_1_0 = (RuleCall)cDataAssignment_11_3_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_11_4 = (Keyword)cGroup_11.eContents().get(4);
		private final Keyword cDataTypeKeyword_11_5 = (Keyword)cGroup_11.eContents().get(5);
		private final Keyword cColonKeyword_11_6 = (Keyword)cGroup_11.eContents().get(6);
		private final Assignment cDataTypeAssignment_11_7 = (Assignment)cGroup_11.eContents().get(7);
		private final RuleCall cDataTypeDataTypeEnumRuleCall_11_7_0 = (RuleCall)cDataTypeAssignment_11_7.eContents().get(0);
		private final Keyword cSemicolonKeyword_11_8 = (Keyword)cGroup_11.eContents().get(8);
		
		//HTTPRequest:
		//	'HTTP' 'request' method=Method name=EString ':'
		//	'URL' ':' URL=EString ';' ('basicAuth' ':' basicAuth=KeyValue ';')? ('headers' ':' headers+=KeyValue (","
		//	headers+=KeyValue)* ';')? ('data' ':' data+=Data ("," data+=Data)* ';'
		//	'dataType' ':' dataType=DataType ';')?;
		@Override public ParserRule getRule() { return rule; }
		
		//'HTTP' 'request' method=Method name=EString ':' 'URL' ':' URL=EString ';' ('basicAuth' ':' basicAuth=KeyValue ';')?
		//('headers' ':' headers+=KeyValue ("," headers+=KeyValue)* ';')? ('data' ':' data+=Data ("," data+=Data)* ';'
		//'dataType' ':' dataType=DataType ';')?
		public Group getGroup() { return cGroup; }
		
		//'HTTP'
		public Keyword getHTTPKeyword_0() { return cHTTPKeyword_0; }
		
		//'request'
		public Keyword getRequestKeyword_1() { return cRequestKeyword_1; }
		
		//method=Method
		public Assignment getMethodAssignment_2() { return cMethodAssignment_2; }
		
		//Method
		public RuleCall getMethodMethodEnumRuleCall_2_0() { return cMethodMethodEnumRuleCall_2_0; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//'URL'
		public Keyword getURLKeyword_5() { return cURLKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//URL=EString
		public Assignment getURLAssignment_7() { return cURLAssignment_7; }
		
		//EString
		public RuleCall getURLEStringParserRuleCall_7_0() { return cURLEStringParserRuleCall_7_0; }
		
		//';'
		public Keyword getSemicolonKeyword_8() { return cSemicolonKeyword_8; }
		
		//('basicAuth' ':' basicAuth=KeyValue ';')?
		public Group getGroup_9() { return cGroup_9; }
		
		//'basicAuth'
		public Keyword getBasicAuthKeyword_9_0() { return cBasicAuthKeyword_9_0; }
		
		//':'
		public Keyword getColonKeyword_9_1() { return cColonKeyword_9_1; }
		
		//basicAuth=KeyValue
		public Assignment getBasicAuthAssignment_9_2() { return cBasicAuthAssignment_9_2; }
		
		//KeyValue
		public RuleCall getBasicAuthKeyValueParserRuleCall_9_2_0() { return cBasicAuthKeyValueParserRuleCall_9_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_9_3() { return cSemicolonKeyword_9_3; }
		
		//('headers' ':' headers+=KeyValue ("," headers+=KeyValue)* ';')?
		public Group getGroup_10() { return cGroup_10; }
		
		//'headers'
		public Keyword getHeadersKeyword_10_0() { return cHeadersKeyword_10_0; }
		
		//':'
		public Keyword getColonKeyword_10_1() { return cColonKeyword_10_1; }
		
		//headers+=KeyValue
		public Assignment getHeadersAssignment_10_2() { return cHeadersAssignment_10_2; }
		
		//KeyValue
		public RuleCall getHeadersKeyValueParserRuleCall_10_2_0() { return cHeadersKeyValueParserRuleCall_10_2_0; }
		
		//("," headers+=KeyValue)*
		public Group getGroup_10_3() { return cGroup_10_3; }
		
		//","
		public Keyword getCommaKeyword_10_3_0() { return cCommaKeyword_10_3_0; }
		
		//headers+=KeyValue
		public Assignment getHeadersAssignment_10_3_1() { return cHeadersAssignment_10_3_1; }
		
		//KeyValue
		public RuleCall getHeadersKeyValueParserRuleCall_10_3_1_0() { return cHeadersKeyValueParserRuleCall_10_3_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_10_4() { return cSemicolonKeyword_10_4; }
		
		//('data' ':' data+=Data ("," data+=Data)* ';' 'dataType' ':' dataType=DataType ';')?
		public Group getGroup_11() { return cGroup_11; }
		
		//'data'
		public Keyword getDataKeyword_11_0() { return cDataKeyword_11_0; }
		
		//':'
		public Keyword getColonKeyword_11_1() { return cColonKeyword_11_1; }
		
		//data+=Data
		public Assignment getDataAssignment_11_2() { return cDataAssignment_11_2; }
		
		//Data
		public RuleCall getDataDataParserRuleCall_11_2_0() { return cDataDataParserRuleCall_11_2_0; }
		
		//("," data+=Data)*
		public Group getGroup_11_3() { return cGroup_11_3; }
		
		//","
		public Keyword getCommaKeyword_11_3_0() { return cCommaKeyword_11_3_0; }
		
		//data+=Data
		public Assignment getDataAssignment_11_3_1() { return cDataAssignment_11_3_1; }
		
		//Data
		public RuleCall getDataDataParserRuleCall_11_3_1_0() { return cDataDataParserRuleCall_11_3_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_11_4() { return cSemicolonKeyword_11_4; }
		
		//'dataType'
		public Keyword getDataTypeKeyword_11_5() { return cDataTypeKeyword_11_5; }
		
		//':'
		public Keyword getColonKeyword_11_6() { return cColonKeyword_11_6; }
		
		//dataType=DataType
		public Assignment getDataTypeAssignment_11_7() { return cDataTypeAssignment_11_7; }
		
		//DataType
		public RuleCall getDataTypeDataTypeEnumRuleCall_11_7_0() { return cDataTypeDataTypeEnumRuleCall_11_7_0; }
		
		//';'
		public Keyword getSemicolonKeyword_11_8() { return cSemicolonKeyword_11_8; }
	}
	public class ImageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.Image");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cResponseKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cURLKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cURLAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cURLEStringParserRuleCall_6_0 = (RuleCall)cURLAssignment_6.eContents().get(0);
		
		//Image:
		//	'image' 'response' name=EString ':'
		//	'URL' ':' URL=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//'image' 'response' name=EString ':' 'URL' ':' URL=EString
		public Group getGroup() { return cGroup; }
		
		//'image'
		public Keyword getImageKeyword_0() { return cImageKeyword_0; }
		
		//'response'
		public Keyword getResponseKeyword_1() { return cResponseKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//'URL'
		public Keyword getURLKeyword_4() { return cURLKeyword_4; }
		
		//':'
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }
		
		//URL=EString
		public Assignment getURLAssignment_6() { return cURLAssignment_6; }
		
		//EString
		public RuleCall getURLEStringParserRuleCall_6_0() { return cURLEStringParserRuleCall_6_0; }
	}
	public class TextInputHttpResponseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.TextInputHttpResponse");
		private final Assignment cTokensAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cTokensAlternatives_0 = (Alternatives)cTokensAssignment.eContents().get(0);
		private final RuleCall cTokensLiteralParserRuleCall_0_0 = (RuleCall)cTokensAlternatives_0.eContents().get(0);
		private final RuleCall cTokensParameterTokenParserRuleCall_0_1 = (RuleCall)cTokensAlternatives_0.eContents().get(1);
		private final RuleCall cTokensHTTPRequestTokenParserRuleCall_0_2 = (RuleCall)cTokensAlternatives_0.eContents().get(2);
		
		//TextInputHttpResponse TextInput:
		//	tokens+=(Literal | ParameterToken | HTTPRequestToken)+;
		@Override public ParserRule getRule() { return rule; }
		
		//tokens+=(Literal | ParameterToken | HTTPRequestToken)+
		public Assignment getTokensAssignment() { return cTokensAssignment; }
		
		//(Literal | ParameterToken | HTTPRequestToken)
		public Alternatives getTokensAlternatives_0() { return cTokensAlternatives_0; }
		
		//Literal
		public RuleCall getTokensLiteralParserRuleCall_0_0() { return cTokensLiteralParserRuleCall_0_0; }
		
		//ParameterToken
		public RuleCall getTokensParameterTokenParserRuleCall_0_1() { return cTokensParameterTokenParserRuleCall_0_1; }
		
		//HTTPRequestToken
		public RuleCall getTokensHTTPRequestTokenParserRuleCall_0_2() { return cTokensHTTPRequestTokenParserRuleCall_0_2; }
	}
	public class TextInputTextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.TextInputText");
		private final Assignment cTokensAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cTokensAlternatives_0 = (Alternatives)cTokensAssignment.eContents().get(0);
		private final RuleCall cTokensLiteralParserRuleCall_0_0 = (RuleCall)cTokensAlternatives_0.eContents().get(0);
		private final RuleCall cTokensParameterTokenParserRuleCall_0_1 = (RuleCall)cTokensAlternatives_0.eContents().get(1);
		
		//TextInputText TextInput:
		//	tokens+=(Literal | ParameterToken)+;
		@Override public ParserRule getRule() { return rule; }
		
		//tokens+=(Literal | ParameterToken)+
		public Assignment getTokensAssignment() { return cTokensAssignment; }
		
		//(Literal | ParameterToken)
		public Alternatives getTokensAlternatives_0() { return cTokensAlternatives_0; }
		
		//Literal
		public RuleCall getTokensLiteralParserRuleCall_0_0() { return cTokensLiteralParserRuleCall_0_0; }
		
		//ParameterToken
		public RuleCall getTokensParameterTokenParserRuleCall_0_1() { return cTokensParameterTokenParserRuleCall_0_1; }
	}
	public class KeyValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.KeyValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyEStringParserRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueLiteralParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//KeyValue:
		//	key=EString ':' value=Literal;
		@Override public ParserRule getRule() { return rule; }
		
		//key=EString ':' value=Literal
		public Group getGroup() { return cGroup; }
		
		//key=EString
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_0_0() { return cKeyEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//value=Literal
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//Literal
		public RuleCall getValueLiteralParserRuleCall_2_0() { return cValueLiteralParserRuleCall_2_0; }
	}
	public class DataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.Data");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyEStringParserRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cValueAlternatives_2_0 = (Alternatives)cValueAssignment_2.eContents().get(0);
		private final RuleCall cValueLiteralParserRuleCall_2_0_0 = (RuleCall)cValueAlternatives_2_0.eContents().get(0);
		private final RuleCall cValueParameterTokenParserRuleCall_2_0_1 = (RuleCall)cValueAlternatives_2_0.eContents().get(1);
		
		//Data KeyValue:
		//	key=EString ':' value=(Literal | ParameterToken);
		@Override public ParserRule getRule() { return rule; }
		
		//key=EString ':' value=(Literal | ParameterToken)
		public Group getGroup() { return cGroup; }
		
		//key=EString
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//EString
		public RuleCall getKeyEStringParserRuleCall_0_0() { return cKeyEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//value=(Literal | ParameterToken)
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//(Literal | ParameterToken)
		public Alternatives getValueAlternatives_2_0() { return cValueAlternatives_2_0; }
		
		//Literal
		public RuleCall getValueLiteralParserRuleCall_2_0_0() { return cValueLiteralParserRuleCall_2_0_0; }
		
		//ParameterToken
		public RuleCall getValueParameterTokenParserRuleCall_2_0_1() { return cValueParameterTokenParserRuleCall_2_0_1; }
	}
	
	public class DefaultEntityElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.DefaultEntity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTEXTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTEXTTextKeyword_0_0 = (Keyword)cTEXTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cNUMBEREnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cNUMBERNumberKeyword_1_0 = (Keyword)cNUMBEREnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDATEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDATEDateKeyword_2_0 = (Keyword)cDATEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cFLOATEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cFLOATFloatKeyword_3_0 = (Keyword)cFLOATEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cTIMEEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cTIMETimeKeyword_4_0 = (Keyword)cTIMEEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum DefaultEntity:
		//	TEXT='text' | NUMBER='number' | DATE='date' | FLOAT='float' | TIME="time";
		public EnumRule getRule() { return rule; }
		
		//TEXT='text' | NUMBER='number' | DATE='date' | FLOAT='float' | TIME="time"
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TEXT='text'
		public EnumLiteralDeclaration getTEXTEnumLiteralDeclaration_0() { return cTEXTEnumLiteralDeclaration_0; }
		
		//'text'
		public Keyword getTEXTTextKeyword_0_0() { return cTEXTTextKeyword_0_0; }
		
		//NUMBER='number'
		public EnumLiteralDeclaration getNUMBEREnumLiteralDeclaration_1() { return cNUMBEREnumLiteralDeclaration_1; }
		
		//'number'
		public Keyword getNUMBERNumberKeyword_1_0() { return cNUMBERNumberKeyword_1_0; }
		
		//DATE='date'
		public EnumLiteralDeclaration getDATEEnumLiteralDeclaration_2() { return cDATEEnumLiteralDeclaration_2; }
		
		//'date'
		public Keyword getDATEDateKeyword_2_0() { return cDATEDateKeyword_2_0; }
		
		//FLOAT='float'
		public EnumLiteralDeclaration getFLOATEnumLiteralDeclaration_3() { return cFLOATEnumLiteralDeclaration_3; }
		
		//'float'
		public Keyword getFLOATFloatKeyword_3_0() { return cFLOATFloatKeyword_3_0; }
		
		//TIME="time"
		public EnumLiteralDeclaration getTIMEEnumLiteralDeclaration_4() { return cTIMEEnumLiteralDeclaration_4; }
		
		//"time"
		public Keyword getTIMETimeKeyword_4_0() { return cTIMETimeKeyword_4_0; }
	}
	public class HTTPReturnTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.HTTPReturnType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTEXTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTEXTTextKeyword_0_0 = (Keyword)cTEXTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSTATUS_CODEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSTATUS_CODEStatus_codeKeyword_1_0 = (Keyword)cSTATUS_CODEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cIMAGEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cIMAGEImageKeyword_2_0 = (Keyword)cIMAGEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDATAEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDATADataKeyword_3_0 = (Keyword)cDATAEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum HTTPReturnType:
		//	TEXT='text' | STATUS_CODE='status_code' | IMAGE='image' | DATA='data';
		public EnumRule getRule() { return rule; }
		
		//TEXT='text' | STATUS_CODE='status_code' | IMAGE='image' | DATA='data'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TEXT='text'
		public EnumLiteralDeclaration getTEXTEnumLiteralDeclaration_0() { return cTEXTEnumLiteralDeclaration_0; }
		
		//'text'
		public Keyword getTEXTTextKeyword_0_0() { return cTEXTTextKeyword_0_0; }
		
		//STATUS_CODE='status_code'
		public EnumLiteralDeclaration getSTATUS_CODEEnumLiteralDeclaration_1() { return cSTATUS_CODEEnumLiteralDeclaration_1; }
		
		//'status_code'
		public Keyword getSTATUS_CODEStatus_codeKeyword_1_0() { return cSTATUS_CODEStatus_codeKeyword_1_0; }
		
		//IMAGE='image'
		public EnumLiteralDeclaration getIMAGEEnumLiteralDeclaration_2() { return cIMAGEEnumLiteralDeclaration_2; }
		
		//'image'
		public Keyword getIMAGEImageKeyword_2_0() { return cIMAGEImageKeyword_2_0; }
		
		//DATA='data'
		public EnumLiteralDeclaration getDATAEnumLiteralDeclaration_3() { return cDATAEnumLiteralDeclaration_3; }
		
		//'data'
		public Keyword getDATADataKeyword_3_0() { return cDATADataKeyword_3_0; }
	}
	public class LanguageElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.Language");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cENGLISHEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cENGLISHEnKeyword_0_0 = (Keyword)cENGLISHEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSPANISHEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSPANISHEsKeyword_1_0 = (Keyword)cSPANISHEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cDANISHEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cDANISHDaKeyword_2_0 = (Keyword)cDANISHEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cGERMANEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cGERMANDeKeyword_3_0 = (Keyword)cGERMANEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cFRENCHEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cFRENCHFrKeyword_4_0 = (Keyword)cFRENCHEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cHINDIEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cHINDIHiKeyword_5_0 = (Keyword)cHINDIEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cINDONESIANEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cINDONESIANIdKeyword_6_0 = (Keyword)cINDONESIANEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cITALIANEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cITALIANItKeyword_7_0 = (Keyword)cITALIANEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cJAPANESEEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cJAPANESEJaKeyword_8_0 = (Keyword)cJAPANESEEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cKOREANEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cKOREANKoKeyword_9_0 = (Keyword)cKOREANEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cDUTCHEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cDUTCHNlKeyword_10_0 = (Keyword)cDUTCHEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cNORWEGIANEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cNORWEGIANNoKeyword_11_0 = (Keyword)cNORWEGIANEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cPOLISHEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cPOLISHPlKeyword_12_0 = (Keyword)cPOLISHEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cPORTUGUESEEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cPORTUGUESEPtKeyword_13_0 = (Keyword)cPORTUGUESEEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cRUSIANEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cRUSIANRuKeyword_14_0 = (Keyword)cRUSIANEnumLiteralDeclaration_14.eContents().get(0);
		private final EnumLiteralDeclaration cSWEDISHEnumLiteralDeclaration_15 = (EnumLiteralDeclaration)cAlternatives.eContents().get(15);
		private final Keyword cSWEDISHSvKeyword_15_0 = (Keyword)cSWEDISHEnumLiteralDeclaration_15.eContents().get(0);
		private final EnumLiteralDeclaration cTHAIEnumLiteralDeclaration_16 = (EnumLiteralDeclaration)cAlternatives.eContents().get(16);
		private final Keyword cTHAIThKeyword_16_0 = (Keyword)cTHAIEnumLiteralDeclaration_16.eContents().get(0);
		private final EnumLiteralDeclaration cTURKISHEnumLiteralDeclaration_17 = (EnumLiteralDeclaration)cAlternatives.eContents().get(17);
		private final Keyword cTURKISHTrKeyword_17_0 = (Keyword)cTURKISHEnumLiteralDeclaration_17.eContents().get(0);
		private final EnumLiteralDeclaration cUKRANIANEnumLiteralDeclaration_18 = (EnumLiteralDeclaration)cAlternatives.eContents().get(18);
		private final Keyword cUKRANIANUkKeyword_18_0 = (Keyword)cUKRANIANEnumLiteralDeclaration_18.eContents().get(0);
		private final EnumLiteralDeclaration cCHINESEEnumLiteralDeclaration_19 = (EnumLiteralDeclaration)cAlternatives.eContents().get(19);
		private final Keyword cCHINESEZhKeyword_19_0 = (Keyword)cCHINESEEnumLiteralDeclaration_19.eContents().get(0);
		
		//enum Language:
		//	ENGLISH='en' | SPANISH='es' | DANISH='da' | GERMAN='de' | FRENCH='fr' |
		//	HINDI='hi' | INDONESIAN='id' | ITALIAN='it' | JAPANESE='ja' | KOREAN='ko' |
		//	DUTCH='nl' | NORWEGIAN='no' | POLISH='pl' | PORTUGUESE='pt' | RUSIAN='ru' |
		//	SWEDISH='sv' | THAI='th' | TURKISH='tr' | UKRANIAN='uk' | CHINESE='zh';
		public EnumRule getRule() { return rule; }
		
		//ENGLISH='en' | SPANISH='es' | DANISH='da' | GERMAN='de' | FRENCH='fr' | HINDI='hi' | INDONESIAN='id' | ITALIAN='it' |
		//JAPANESE='ja' | KOREAN='ko' | DUTCH='nl' | NORWEGIAN='no' | POLISH='pl' | PORTUGUESE='pt' | RUSIAN='ru' | SWEDISH='sv'
		//| THAI='th' | TURKISH='tr' | UKRANIAN='uk' | CHINESE='zh'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ENGLISH='en'
		public EnumLiteralDeclaration getENGLISHEnumLiteralDeclaration_0() { return cENGLISHEnumLiteralDeclaration_0; }
		
		//'en'
		public Keyword getENGLISHEnKeyword_0_0() { return cENGLISHEnKeyword_0_0; }
		
		//SPANISH='es'
		public EnumLiteralDeclaration getSPANISHEnumLiteralDeclaration_1() { return cSPANISHEnumLiteralDeclaration_1; }
		
		//'es'
		public Keyword getSPANISHEsKeyword_1_0() { return cSPANISHEsKeyword_1_0; }
		
		//DANISH='da'
		public EnumLiteralDeclaration getDANISHEnumLiteralDeclaration_2() { return cDANISHEnumLiteralDeclaration_2; }
		
		//'da'
		public Keyword getDANISHDaKeyword_2_0() { return cDANISHDaKeyword_2_0; }
		
		//GERMAN='de'
		public EnumLiteralDeclaration getGERMANEnumLiteralDeclaration_3() { return cGERMANEnumLiteralDeclaration_3; }
		
		//'de'
		public Keyword getGERMANDeKeyword_3_0() { return cGERMANDeKeyword_3_0; }
		
		//FRENCH='fr'
		public EnumLiteralDeclaration getFRENCHEnumLiteralDeclaration_4() { return cFRENCHEnumLiteralDeclaration_4; }
		
		//'fr'
		public Keyword getFRENCHFrKeyword_4_0() { return cFRENCHFrKeyword_4_0; }
		
		//HINDI='hi'
		public EnumLiteralDeclaration getHINDIEnumLiteralDeclaration_5() { return cHINDIEnumLiteralDeclaration_5; }
		
		//'hi'
		public Keyword getHINDIHiKeyword_5_0() { return cHINDIHiKeyword_5_0; }
		
		//INDONESIAN='id'
		public EnumLiteralDeclaration getINDONESIANEnumLiteralDeclaration_6() { return cINDONESIANEnumLiteralDeclaration_6; }
		
		//'id'
		public Keyword getINDONESIANIdKeyword_6_0() { return cINDONESIANIdKeyword_6_0; }
		
		//ITALIAN='it'
		public EnumLiteralDeclaration getITALIANEnumLiteralDeclaration_7() { return cITALIANEnumLiteralDeclaration_7; }
		
		//'it'
		public Keyword getITALIANItKeyword_7_0() { return cITALIANItKeyword_7_0; }
		
		//JAPANESE='ja'
		public EnumLiteralDeclaration getJAPANESEEnumLiteralDeclaration_8() { return cJAPANESEEnumLiteralDeclaration_8; }
		
		//'ja'
		public Keyword getJAPANESEJaKeyword_8_0() { return cJAPANESEJaKeyword_8_0; }
		
		//KOREAN='ko'
		public EnumLiteralDeclaration getKOREANEnumLiteralDeclaration_9() { return cKOREANEnumLiteralDeclaration_9; }
		
		//'ko'
		public Keyword getKOREANKoKeyword_9_0() { return cKOREANKoKeyword_9_0; }
		
		//DUTCH='nl'
		public EnumLiteralDeclaration getDUTCHEnumLiteralDeclaration_10() { return cDUTCHEnumLiteralDeclaration_10; }
		
		//'nl'
		public Keyword getDUTCHNlKeyword_10_0() { return cDUTCHNlKeyword_10_0; }
		
		//NORWEGIAN='no'
		public EnumLiteralDeclaration getNORWEGIANEnumLiteralDeclaration_11() { return cNORWEGIANEnumLiteralDeclaration_11; }
		
		//'no'
		public Keyword getNORWEGIANNoKeyword_11_0() { return cNORWEGIANNoKeyword_11_0; }
		
		//POLISH='pl'
		public EnumLiteralDeclaration getPOLISHEnumLiteralDeclaration_12() { return cPOLISHEnumLiteralDeclaration_12; }
		
		//'pl'
		public Keyword getPOLISHPlKeyword_12_0() { return cPOLISHPlKeyword_12_0; }
		
		//PORTUGUESE='pt'
		public EnumLiteralDeclaration getPORTUGUESEEnumLiteralDeclaration_13() { return cPORTUGUESEEnumLiteralDeclaration_13; }
		
		//'pt'
		public Keyword getPORTUGUESEPtKeyword_13_0() { return cPORTUGUESEPtKeyword_13_0; }
		
		//RUSIAN='ru'
		public EnumLiteralDeclaration getRUSIANEnumLiteralDeclaration_14() { return cRUSIANEnumLiteralDeclaration_14; }
		
		//'ru'
		public Keyword getRUSIANRuKeyword_14_0() { return cRUSIANRuKeyword_14_0; }
		
		//SWEDISH='sv'
		public EnumLiteralDeclaration getSWEDISHEnumLiteralDeclaration_15() { return cSWEDISHEnumLiteralDeclaration_15; }
		
		//'sv'
		public Keyword getSWEDISHSvKeyword_15_0() { return cSWEDISHSvKeyword_15_0; }
		
		//THAI='th'
		public EnumLiteralDeclaration getTHAIEnumLiteralDeclaration_16() { return cTHAIEnumLiteralDeclaration_16; }
		
		//'th'
		public Keyword getTHAIThKeyword_16_0() { return cTHAIThKeyword_16_0; }
		
		//TURKISH='tr'
		public EnumLiteralDeclaration getTURKISHEnumLiteralDeclaration_17() { return cTURKISHEnumLiteralDeclaration_17; }
		
		//'tr'
		public Keyword getTURKISHTrKeyword_17_0() { return cTURKISHTrKeyword_17_0; }
		
		//UKRANIAN='uk'
		public EnumLiteralDeclaration getUKRANIANEnumLiteralDeclaration_18() { return cUKRANIANEnumLiteralDeclaration_18; }
		
		//'uk'
		public Keyword getUKRANIANUkKeyword_18_0() { return cUKRANIANUkKeyword_18_0; }
		
		//CHINESE='zh'
		public EnumLiteralDeclaration getCHINESEEnumLiteralDeclaration_19() { return cCHINESEEnumLiteralDeclaration_19; }
		
		//'zh'
		public Keyword getCHINESEZhKeyword_19_0() { return cCHINESEZhKeyword_19_0; }
	}
	public class DataTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.DataType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cJSONEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cJSONJSONKeyword_0_0 = (Keyword)cJSONEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cFORMEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cFORMFORMKeyword_1_0 = (Keyword)cFORMEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum DataType:
		//	JSON | FORM;
		public EnumRule getRule() { return rule; }
		
		//JSON | FORM
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//JSON
		public EnumLiteralDeclaration getJSONEnumLiteralDeclaration_0() { return cJSONEnumLiteralDeclaration_0; }
		
		//'JSON'
		public Keyword getJSONJSONKeyword_0_0() { return cJSONJSONKeyword_0_0; }
		
		//FORM
		public EnumLiteralDeclaration getFORMEnumLiteralDeclaration_1() { return cFORMEnumLiteralDeclaration_1; }
		
		//'FORM'
		public Keyword getFORMFORMKeyword_1_0() { return cFORMFORMKeyword_1_0; }
	}
	public class MethodElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.botGenerator.Bot.Method");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPOSTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPOSTPostKeyword_0_0 = (Keyword)cPOSTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cGETEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cGETGetKeyword_1_0 = (Keyword)cGETEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Method:
		//	POST='post' | GET='get';
		public EnumRule getRule() { return rule; }
		
		//POST='post' | GET='get'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//POST='post'
		public EnumLiteralDeclaration getPOSTEnumLiteralDeclaration_0() { return cPOSTEnumLiteralDeclaration_0; }
		
		//'post'
		public Keyword getPOSTPostKeyword_0_0() { return cPOSTPostKeyword_0_0; }
		
		//GET='get'
		public EnumLiteralDeclaration getGETEnumLiteralDeclaration_1() { return cGETEnumLiteralDeclaration_1; }
		
		//'get'
		public Keyword getGETGetKeyword_1_0() { return cGETGetKeyword_1_0; }
	}
	
	private final BotElements pBot;
	private final EntityElements pEntity;
	private final ActionElements pAction;
	private final TokenElements pToken;
	private final EStringElements pEString;
	private final IntentElements pIntent;
	private final TransitionElements pTransition;
	private final StateElements pState;
	private final State2Elements pState2;
	private final TrainingPhraseElements pTrainingPhrase;
	private final ParameterElements pParameter;
	private final LiteralElements pLiteral;
	private final EntityTokenElements pEntityToken;
	private final ParameterTokenElements pParameterToken;
	private final ParameterRefenceTokenElements pParameterRefenceToken;
	private final HTTPRequestTokenElements pHTTPRequestToken;
	private final DefaultEntityElements eDefaultEntity;
	private final EBooleanElements pEBoolean;
	private final SimpleElements pSimple;
	private final CompositeElements pComposite;
	private final SimpleInputElements pSimpleInput;
	private final CompositeInputElements pCompositeInput;
	private final TextElements pText;
	private final HTTPResponseElements pHTTPResponse;
	private final HTTPRequestElements pHTTPRequest;
	private final ImageElements pImage;
	private final TextInputHttpResponseElements pTextInputHttpResponse;
	private final TextInputTextElements pTextInputText;
	private final HTTPReturnTypeElements eHTTPReturnType;
	private final LanguageElements eLanguage;
	private final KeyValueElements pKeyValue;
	private final DataElements pData;
	private final DataTypeElements eDataType;
	private final MethodElements eMethod;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public BotGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pBot = new BotElements();
		this.pEntity = new EntityElements();
		this.pAction = new ActionElements();
		this.pToken = new TokenElements();
		this.pEString = new EStringElements();
		this.pIntent = new IntentElements();
		this.pTransition = new TransitionElements();
		this.pState = new StateElements();
		this.pState2 = new State2Elements();
		this.pTrainingPhrase = new TrainingPhraseElements();
		this.pParameter = new ParameterElements();
		this.pLiteral = new LiteralElements();
		this.pEntityToken = new EntityTokenElements();
		this.pParameterToken = new ParameterTokenElements();
		this.pParameterRefenceToken = new ParameterRefenceTokenElements();
		this.pHTTPRequestToken = new HTTPRequestTokenElements();
		this.eDefaultEntity = new DefaultEntityElements();
		this.pEBoolean = new EBooleanElements();
		this.pSimple = new SimpleElements();
		this.pComposite = new CompositeElements();
		this.pSimpleInput = new SimpleInputElements();
		this.pCompositeInput = new CompositeInputElements();
		this.pText = new TextElements();
		this.pHTTPResponse = new HTTPResponseElements();
		this.pHTTPRequest = new HTTPRequestElements();
		this.pImage = new ImageElements();
		this.pTextInputHttpResponse = new TextInputHttpResponseElements();
		this.pTextInputText = new TextInputTextElements();
		this.eHTTPReturnType = new HTTPReturnTypeElements();
		this.eLanguage = new LanguageElements();
		this.pKeyValue = new KeyValueElements();
		this.pData = new DataElements();
		this.eDataType = new DataTypeElements();
		this.eMethod = new MethodElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.botGenerator.Bot".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Bot:
	//	'Chatbot' name=EString 'language:' language=Language
	//	'intents' ':' intents+=Intent intents+=Intent* ('entities' ':' entities+=Entity entities+=Entity*)? ('actions' ':'
	//	actions+=Action actions+=Action*)?
	//	'flows' ':' ('-' flows+=Transition ';')+;
	public BotElements getBotAccess() {
		return pBot;
	}
	
	public ParserRule getBotRule() {
		return getBotAccess().getRule();
	}
	
	//Entity:
	//	Simple | Composite;
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}
	
	//Action:
	//	Text | HTTPRequest | Image | HTTPResponse;
	public ActionElements getActionAccess() {
		return pAction;
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}
	
	//Token:
	//	Literal | EntityToken | ParameterToken | ParameterRefenceToken;
	public TokenElements getTokenAccess() {
		return pToken;
	}
	
	public ParserRule getTokenRule() {
		return getTokenAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Intent:
	//	name=EString fallbackIntent?='Fallback'?
	//	'{'
	//	'inputs:' inputs+=TrainingPhrase ("," inputs+=TrainingPhrase)* ('parameters:' parameters+=Parameter
	//	parameters+=Parameter*)?
	//	'}';
	public IntentElements getIntentAccess() {
		return pIntent;
	}
	
	public ParserRule getIntentRule() {
		return getIntentAccess().getRule();
	}
	
	//Transition UserInteraction:
	//	'user' intent=[Intent|EString] ('=>' target=(State | State2))?;
	public TransitionElements getTransitionAccess() {
		return pTransition;
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}
	
	//State BotInteraction:
	//	'chatbot' '(' actions+=[Action|EString] (',' actions+=[Action|EString])* ')' ('=>' outcoming+=Transition)?;
	public StateElements getStateAccess() {
		return pState;
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}
	
	//State2 BotInteraction:
	//	'chatbot' '(' actions+=[Action|EString] (',' actions+=[Action|EString])* ')' '{' ('=>' outcoming+=Transition ';')+
	//	'}';
	public State2Elements getState2Access() {
		return pState2;
	}
	
	public ParserRule getState2Rule() {
		return getState2Access().getRule();
	}
	
	//TrainingPhrase:
	//	{TrainingPhrase} tokens+=(Literal | ParameterRefenceToken)+;
	public TrainingPhraseElements getTrainingPhraseAccess() {
		return pTrainingPhrase;
	}
	
	public ParserRule getTrainingPhraseRule() {
		return getTrainingPhraseAccess().getRule();
	}
	
	//Parameter:
	//	name=EString ':'
	//	'entity' (entity=[Entity|EString] | defaultEntity=DefaultEntity) (',' required?='required' (',' 'prompts' '['
	//	prompts+=EString (',' prompts+=EString)* ']')?)? (',' isList?='isList')? ';';
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//Literal:
	//	text=EString;
	public LiteralElements getLiteralAccess() {
		return pLiteral;
	}
	
	public ParserRule getLiteralRule() {
		return getLiteralAccess().getRule();
	}
	
	//EntityToken:
	//	'@' entity=[Entity|EString];
	public EntityTokenElements getEntityTokenAccess() {
		return pEntityToken;
	}
	
	public ParserRule getEntityTokenRule() {
		return getEntityTokenAccess().getRule();
	}
	
	//ParameterToken:
	//	'[' parameter=[Parameter|EString] ']';
	public ParameterTokenElements getParameterTokenAccess() {
		return pParameterToken;
	}
	
	public ParserRule getParameterTokenRule() {
		return getParameterTokenAccess().getRule();
	}
	
	//ParameterRefenceToken ParameterReferenceToken:
	//	'(' textReference=EString ')' '[' parameter=[Parameter|EString] ']';
	public ParameterRefenceTokenElements getParameterRefenceTokenAccess() {
		return pParameterRefenceToken;
	}
	
	public ParserRule getParameterRefenceTokenRule() {
		return getParameterRefenceTokenAccess().getRule();
	}
	
	//HTTPRequestToken HTTPRequestToke:
	//	'request.' type=HTTPReturnType ('.' dataKey=EString)?;
	public HTTPRequestTokenElements getHTTPRequestTokenAccess() {
		return pHTTPRequestToken;
	}
	
	public ParserRule getHTTPRequestTokenRule() {
		return getHTTPRequestTokenAccess().getRule();
	}
	
	//enum DefaultEntity:
	//	TEXT='text' | NUMBER='number' | DATE='date' | FLOAT='float' | TIME="time";
	public DefaultEntityElements getDefaultEntityAccess() {
		return eDefaultEntity;
	}
	
	public EnumRule getDefaultEntityRule() {
		return getDefaultEntityAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//Simple:
	//	{Simple}
	//	'Simple' 'entity' name=EString ':' (inputs+=SimpleInput inputs+=SimpleInput*)?;
	public SimpleElements getSimpleAccess() {
		return pSimple;
	}
	
	public ParserRule getSimpleRule() {
		return getSimpleAccess().getRule();
	}
	
	//Composite:
	//	{Composite}
	//	'Composite' 'entity' name=EString ':' (inputs+=CompositeInput inputs+=CompositeInput*)?;
	public CompositeElements getCompositeAccess() {
		return pComposite;
	}
	
	public ParserRule getCompositeRule() {
		return getCompositeAccess().getRule();
	}
	
	//SimpleInput:
	//	{SimpleInput} name=EString ('synonyms' values+=EString ("," values+=EString)*)? ';';
	public SimpleInputElements getSimpleInputAccess() {
		return pSimpleInput;
	}
	
	public ParserRule getSimpleInputRule() {
		return getSimpleInputAccess().getRule();
	}
	
	//CompositeInput:
	//	tokens+=(Literal | EntityToken)+ ';';
	public CompositeInputElements getCompositeInputAccess() {
		return pCompositeInput;
	}
	
	public ParserRule getCompositeInputRule() {
		return getCompositeInputAccess().getRule();
	}
	
	//Text:
	//	'text' 'response' name=EString ':'
	//	'text:'? inputs+=TextInputText (',' inputs+=TextInputText)*;
	public TextElements getTextAccess() {
		return pText;
	}
	
	public ParserRule getTextRule() {
		return getTextAccess().getRule();
	}
	
	//HTTPResponse:
	//	'HttpResponse' name=EString ':'
	//	'HttpRequest:' HTTPRequest=[HTTPRequest|EString] ';'
	//	'text:' inputs=TextInputHttpResponse ';';
	public HTTPResponseElements getHTTPResponseAccess() {
		return pHTTPResponse;
	}
	
	public ParserRule getHTTPResponseRule() {
		return getHTTPResponseAccess().getRule();
	}
	
	//HTTPRequest:
	//	'HTTP' 'request' method=Method name=EString ':'
	//	'URL' ':' URL=EString ';' ('basicAuth' ':' basicAuth=KeyValue ';')? ('headers' ':' headers+=KeyValue (","
	//	headers+=KeyValue)* ';')? ('data' ':' data+=Data ("," data+=Data)* ';'
	//	'dataType' ':' dataType=DataType ';')?;
	public HTTPRequestElements getHTTPRequestAccess() {
		return pHTTPRequest;
	}
	
	public ParserRule getHTTPRequestRule() {
		return getHTTPRequestAccess().getRule();
	}
	
	//Image:
	//	'image' 'response' name=EString ':'
	//	'URL' ':' URL=EString;
	public ImageElements getImageAccess() {
		return pImage;
	}
	
	public ParserRule getImageRule() {
		return getImageAccess().getRule();
	}
	
	//TextInputHttpResponse TextInput:
	//	tokens+=(Literal | ParameterToken | HTTPRequestToken)+;
	public TextInputHttpResponseElements getTextInputHttpResponseAccess() {
		return pTextInputHttpResponse;
	}
	
	public ParserRule getTextInputHttpResponseRule() {
		return getTextInputHttpResponseAccess().getRule();
	}
	
	//TextInputText TextInput:
	//	tokens+=(Literal | ParameterToken)+;
	public TextInputTextElements getTextInputTextAccess() {
		return pTextInputText;
	}
	
	public ParserRule getTextInputTextRule() {
		return getTextInputTextAccess().getRule();
	}
	
	//enum HTTPReturnType:
	//	TEXT='text' | STATUS_CODE='status_code' | IMAGE='image' | DATA='data';
	public HTTPReturnTypeElements getHTTPReturnTypeAccess() {
		return eHTTPReturnType;
	}
	
	public EnumRule getHTTPReturnTypeRule() {
		return getHTTPReturnTypeAccess().getRule();
	}
	
	//enum Language:
	//	ENGLISH='en' | SPANISH='es' | DANISH='da' | GERMAN='de' | FRENCH='fr' |
	//	HINDI='hi' | INDONESIAN='id' | ITALIAN='it' | JAPANESE='ja' | KOREAN='ko' |
	//	DUTCH='nl' | NORWEGIAN='no' | POLISH='pl' | PORTUGUESE='pt' | RUSIAN='ru' |
	//	SWEDISH='sv' | THAI='th' | TURKISH='tr' | UKRANIAN='uk' | CHINESE='zh';
	public LanguageElements getLanguageAccess() {
		return eLanguage;
	}
	
	public EnumRule getLanguageRule() {
		return getLanguageAccess().getRule();
	}
	
	//KeyValue:
	//	key=EString ':' value=Literal;
	public KeyValueElements getKeyValueAccess() {
		return pKeyValue;
	}
	
	public ParserRule getKeyValueRule() {
		return getKeyValueAccess().getRule();
	}
	
	//Data KeyValue:
	//	key=EString ':' value=(Literal | ParameterToken);
	public DataElements getDataAccess() {
		return pData;
	}
	
	public ParserRule getDataRule() {
		return getDataAccess().getRule();
	}
	
	//enum DataType:
	//	JSON | FORM;
	public DataTypeElements getDataTypeAccess() {
		return eDataType;
	}
	
	public EnumRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}
	
	//enum Method:
	//	POST='post' | GET='get';
	public MethodElements getMethodAccess() {
		return eMethod;
	}
	
	public EnumRule getMethodRule() {
		return getMethodAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
